(function () {
  function render(items) {
    var el = document.getElementById('instafeed');
    if (!el) return;
    if (!items || !items.length) {
      el.innerHTML = '<p class="ig-empty">No photos found.</p>';
      return;
    }
    var frag = document.createDocumentFragment();
    items.forEach(function (m) {
      var link = m.permalink;
      var imgSrc = m.media_type === 'VIDEO' ? (m.thumbnail_url || m.media_url) : m.media_url;
      if (!imgSrc) return;
      var a = document.createElement('a');
      a.href = link;
      a.target = '_blank';
      a.rel = 'noopener noreferrer';
      var img = document.createElement('img');
      img.src = imgSrc;
      img.loading = 'lazy';
      img.alt = (m.caption || 'Instagram photo').replace(/</g, '&lt;');
      a.appendChild(img);
      frag.appendChild(a);
    });
    el.innerHTML = '';
    el.appendChild(frag);
  }

  function showError(msg) {
    var el = document.getElementById('instafeed');
    if (el) el.innerHTML = '<p class="ig-error">' + msg + '</p>';
  }

  function init() {
    var token = (window.IG_ACCESS_TOKEN || '').trim();
    var limit = window.IG_LIMIT || 9;
    var el = document.getElementById('instafeed');
    if (!el) return;

    // Prefer static JSON generated by GitHub Actions
    var urls = [
      '/assets/instagram.json',
      'https://raw.githubusercontent.com/jodaiber/jodaiber.github.io/instagram-feed/assets/instagram.json'
    ];

    function fetchJson(url) {
      // Cache-bust to avoid stale CDN content
      var u = url + (url.indexOf('?') === -1 ? '?' : '&') + 'ts=' + Date.now();
      return fetch(u, { credentials: 'omit', cache: 'no-store' })
        .then(function (r) { return r.ok ? r.json() : Promise.reject(new Error('HTTP ' + r.status)); });
    }

    function tryStatic(i) {
      if (i >= urls.length) return Promise.reject(new Error('No static JSON'));
      return fetchJson(urls[i]).then(function (json) {
        if (json && Array.isArray(json.data) && json.data.length) {
          var items = json.data.filter(function (m) {
            return m.media_type === 'IMAGE' || m.media_type === 'CAROUSEL_ALBUM' || m.media_type === 'VIDEO';
          });
          render(items.slice(0, limit));
          return true;
        }
        return tryStatic(i + 1);
      }).catch(function () { return tryStatic(i + 1); });
    }

    function fetchLive() {
      if (!token) return Promise.reject(new Error('No token'));
      var url = 'https://graph.instagram.com/me/media' +
        '?fields=id,caption,media_url,permalink,media_type,thumbnail_url,timestamp' +
        '&limit=' + encodeURIComponent(limit) +
        '&access_token=' + encodeURIComponent(token);
      return fetch(url)
        .then(function (r) { return r.ok ? r.json() : Promise.reject(new Error('HTTP ' + r.status)); })
        .then(function (json) {
          if (!json || !json.data) throw new Error('No data');
          var items = json.data.filter(function (m) {
            return m.media_type === 'IMAGE' || m.media_type === 'CAROUSEL_ALBUM' || m.media_type === 'VIDEO';
          });
          render(items.slice(0, limit));
          return true;
        });
    }

    tryStatic(0)
      .catch(function () { return fetchLive(); })
      .catch(function () {
        showError('Instagram feed unavailable.');
      });
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }
})();
